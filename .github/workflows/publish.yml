name: Node.js Package

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  NODE_ENV: production

jobs:
  publish:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ['ubuntu-latest']
        node-version: [22.x]
        
    if: ${{ github.ref == 'refs/heads/master' }}
    permissions:
      contents: write
      packages: write
      issues: write
      pull-requests: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
        cache: 'yarn'
        registry-url: 'https://npm.pkg.github.com'
        scope: '@vechr'

    - name: Install Yarn
      run: |
        npm install -g yarn
        yarn --version

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          **/node_modules
          ${{ github.workspace }}/.yarn-cache
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install dependencies
      run: |
        yarn install --frozen-lockfile --prefer-offline
        yarn add -D semantic-release @semantic-release/github @semantic-release/npm @semantic-release/commit-analyzer @semantic-release/release-notes-generator
        yarn global add @nestjs/cli

    - name: Release
      run: yarn semantic-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and Publish Package
      run: |
        yarn prisma:sync
        yarn build
        yarn publish --access public --no-git-tag-version
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NODE_ENV: production
        PATH: ${{ github.workspace }}/node_modules/.bin:$PATH

    - name: Verify Package
      run: |
        yarn cache clean
        yarn add @vechr/vechr-base@latest
        yarn list --pattern @vechr/vechr-base
